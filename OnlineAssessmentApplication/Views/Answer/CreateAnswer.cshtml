@model IList<OnlineAssessmentApplication.ViewModel.AnswerViewModel>

@{
    ViewBag.Title = "CreateAnswer";
}

<div class="container">
    @using (Html.BeginForm("CreateAnswer", "Answer", FormMethod.Post))
    {
    <div class="col-sm-12">
        <div class="title" style="">Create Answer</div>
        <table id="submissionTable" class="table table-bordered">
            <thead>
                <tr>
                    <th>
                        <div class="form-row">
                            Answer Label
                        </div>
                    </th>
                    <th>
                        <div class="form-row">
                            Answer Description
                        </div>
                    </th>
                    <th>
                        <div class="form-row">
                            Mark
                        </div>
                    </th>
                    <th>
                        <div class="form-row">
                            IsCorrect
                        </div>
                    </th>
                    <th>
                        <div class="form-row">
                            Action
                        </div>
                    </th>
                </tr>
            </thead>
            <tr id="tablerow0">
                <th>
                    <div class="form-row">
                        <div class="col-md-12">
                            @Html.TextBoxFor(Model =>  Model[0].AnswerLabel, new { @class = "inputName", placeholder = "Name of the AnswerLable" })
                            @Html.ValidationMessageFor(Model =>  Model[0].AnswerLabel, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </th>
                <th>
                    <div class="form-row">
                        <div class="col-md-12">
                            @Html.TextBoxFor(Model => Model[0].AnswerDescription, new { @class = "inputName", placeholder = "Name of the Description" })
                            @Html.ValidationMessageFor(Model => Model[0].AnswerDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </th>
                <th>
                    <div class="form-row">
                        <div class="col-md-12">                           
                            @Html.TextBoxFor(Model => Model[0].Mark, new { @class = "inputName", placeholder = "Enter the valid Mark" })
                            @Html.ValidationMessageFor(Model => Model[0].Mark, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </th>
                <th>

                    <div class="form-row">
                         <div class="col-md-12">
                            <select name="[0].IsCorrect" class="dropdown-item-text">
                                <option value="true">True</option>
                                <option value="false">False</option>
                            </select>
                        </div>
                    </div>
                </th>
                <th>
                    <button type="button" class="btn btn-primary" onclick="removeTr(0);">Remove</button>
                </th>


            </tr>
        </table>
        <p>
            <button id="add" type="button" class="btn btn-primary">Add</button>
        </p>
        <hr />
        <p>
            <input type="submit" value="Create" class="btn btn-default" />           
            @Html.ActionLink("Back", "CreateQuestions", "Question", new { @class = "btn btn-primary" }, null)
        </p>
    </div>
    }
</div>

<Script>
    var counter = 1;
    $(function () {
        $('#add').click(function () {
            $('<tr id="tablerow' + counter + '"><td>' +               
                '<input class="inputName" data-val="true" data-val-required="Answer Label is Required" name="[' + counter + '].AnswerLabel" placeholder="Name of the AnswerLable" type="text" value="" aria-describedby="[' + counter + '].AnswerLabel-error [' + counter + '].AnswerLabel-error" aria-invalid="true" required="required"/>' +
                '<span class="field-validation-valid" data-valmsg-replace="true"  data-valmsg-for="Email"></span>' +
                 '</td>' +
                '<td>' +
                '<input class="inputName" data-val="true" data-val-required="Description is Required" name="['+ counter +'].AnswerDescription" placeholder="Name of the Description" type="text" value=""  required="required" />' +
                '</td>' +
                '<td>' +
                '<input class="inputName" data-val="true" data-val-number="The field Mark must be a number." data-val-required="Mark is Required" name="['+ counter +'].Mark" placeholder="Enter the valid Mark" type="text" value="" required="required" />' +
                '</td>' +
                '<td>' +
                '<select name="[' + counter + '].IsCorrect" class="dropdown-item-text"> <option value="true">True</option> <option value="false">False</option> </select>' +
                '</td>' +
                '<td>' +
                '<button type="button" class="btn btn-primary" onclick="removeTr(' + counter + ');">Remove</button>' +
                '</td>' +
                '</tr>').appendTo('#submissionTable');
            counter++;
            return false;
        });
    });
    function removeTr(index) {
        if (counter > 1) {
            $('#tablerow' + index).remove();
            counter--;
        }
        return false;
    }
</Script>

